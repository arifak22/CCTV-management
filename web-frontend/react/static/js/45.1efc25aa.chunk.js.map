{"version":3,"sources":["Api.js","Component/FormComponent.js","Component/Helper.js","Component/PaginationComponent.js","Component/TableComponent.js","views/Cabang/index.js"],"names":["ServerUrl","url","Assets","params","param","qs","stringify","header","jwt","content","headers","API","Login","getOptionCabang","getOptionLokasi","getOptionTiang","getOptionMerk","getOptionPerusahaan","getOptionPriv","getOptionMenu","getOptionCctv","getOptionKegiatan","getMasterTiang","postMasterTiang","deleteMasterTiang","getMasterTiangBy","updateMasterTiang","postMasterPerusahaan","getMasterPerusahaan","deleteMasterPerusahaan","getMasterPerusahaanBy","updateMasterPerusahaan","getListAksesCctv","postListAksesCctv","getMasterLokasi","postMasterLokasi","deleteMasterLokasi","getMasterLokasiBy","updateMasterLokasi","getMasterCabang","postMasterCabang","deleteMasterCabang","getMasterCabangBy","updateMasterCabang","getMasterMerk","postMasterMerk","deleteMasterMerk","getMasterMerkBy","updateMasterMerk","getMasterCctv","postMasterCctv","deleteMasterCctv","getMasterCctvBy","updateMasterCctv","detailMasterCctv","getMasterUser","postMasterUser","statusMasterUser","getMasterUserBy","updateMasterUser","detailMasterUser","getMasterPrivilege","postMasterPrivilege","deleteMasterPrivilege","getMasterPrivilegeBy","updateMasterPrivilege","getListPermission","postListPermission","getMasterMenu","postMasterMenu","deleteMasterMenu","getMasterMenuBy","updateMasterMenu","getMasterSubmenu","postMasterSubmenu","deleteMasterSubmenu","getMasterSubmenuBy","updateMasterSubmenu","postMaintenance","getMaintenance","deleteMaintenance","detailMaintenance","getMaintenanceBy","updateMaintenance","moment","require","getError","value","errormessage","message","type","InputForm","props","errors","name","label","invalid","onChange","innerRef","refs","rows","disabled","FileForm","useState","fileFoto","setFileFoto","getFile","event","uri","target","files","split","Swal","fire","title","text","icon","confirmButtonText","fileInput","Resizer","imageFileResizer","fileChangedHandler","accept","style","width","src","DateForm","dateInit","timeInit","setValue","format","valdate","setValdate","valtime","setValtime","md","e","result","console","log","date","_d","getDate","getMonth","getFullYear","handleDate","dateFormat","timeFormat","locale","getHours","getMinutes","getSeconds","handleTime","SelectForm","data","map","option","key","SwalResult","api_status","api_message","localStorage","removeItem","allowOutsideClick","allowEscapeKey","then","window","location","reload","SwalLoading","timerProgressBar","onBeforeOpen","showLoading","makeid","length","characters","charactersLength","i","charAt","Math","floor","random","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","push","Pagination","gotoPage","page","onPageChanged","f","currentPage","max","min","ceil","totalRecords","pageLimit","paginationData","totalPages","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","nextProps","this","aria-label","className","index","href","onClick","aria-hidden","Component","TableList","FilterResult","handleSearch","search","handleRow","row","sort","sortStatus","val","status","ret","d","encodeURIComponent","join","by","handleRespone","query","encodeQueryData","columns","color","field","cursor","Sorting","list","no","item","items","template","Fragment","Row","Col","xs","sm","FormGroup","Input","id","InputGroup","InputGroupAddon","addonType","Button","placeholder","Table","hover","bordered","striped","responsive","HeaderField","loading","colSpan","align","ListValue","total","parseInt","per_page","Add","useForm","register","handleSubmit","reset","setLoading","block","outline","onSubmit","showCancelButton","focusConfirm","cancelButtonText","axios","post","getItem","response","res","refreshData","catch","error","toString","required","maxLength","size","Update","defaultValues","nama_cabang","alias_cabang","ref","id_cabang","Default","doDelete","doUpdate","getData","pageLoading","pageAdd","pageUpdate","dataUpdate","get","scrollTo","display","justifyContent","marginBottom"],"mappings":"6GACA,8JAIO,SAASA,EAAUC,GACtB,MACW,uCAAyCA,EAKjD,SAASC,EAAOD,GACnB,MACW,4CAA8CA,EAYtD,SAASE,EAAOC,GACnB,OAAOC,IAAGC,UAAUF,GAKjB,SAASG,EAAOC,GAAkD,IAA7CC,EAA4C,uDAApC,oCAChC,MAAO,CACCC,QAAQ,CACJ,eAAe,GAAf,OAAmBD,GACnB,cAAgB,UAAhB,OAA2BD,KAKpC,SAASG,IACZ,MAAO,CACHC,MAAQZ,EAAU,kBAGlBa,gBAAqBb,EAAU,4BAC/Bc,gBAAqBd,EAAU,4BAC/Be,eAAqBf,EAAU,2BAC/BgB,cAAqBhB,EAAU,0BAC/BiB,oBAAqBjB,EAAU,gCAC/BkB,cAAqBlB,EAAU,+BAC/BmB,cAAqBnB,EAAU,0BAC/BoB,cAAqBpB,EAAU,0BAC/BqB,kBAAqBrB,EAAU,8BAG/BsB,eAAmBtB,EAAU,oBAC7BuB,gBAAmBvB,EAAU,oBAC7BwB,kBAAmBxB,EAAU,2BAC7ByB,iBAAmBzB,EAAU,uBAC7B0B,kBAAmB1B,EAAU,2BAG7B2B,qBAAwB3B,EAAU,yBAClC4B,oBAAwB5B,EAAU,yBAClC6B,uBAAwB7B,EAAU,gCAClC8B,sBAAwB9B,EAAU,4BAClC+B,uBAAwB/B,EAAU,gCAClCgC,iBAAwBhC,EAAU,8BAClCiC,kBAAwBjC,EAAU,8BAGlCkC,gBAAoBlC,EAAU,qBAC9BmC,iBAAoBnC,EAAU,qBAC9BoC,mBAAoBpC,EAAU,4BAC9BqC,kBAAoBrC,EAAU,wBAC9BsC,mBAAoBtC,EAAU,4BAG9BuC,gBAAoBvC,EAAU,qBAC9BwC,iBAAoBxC,EAAU,qBAC9ByC,mBAAoBzC,EAAU,4BAC9B0C,kBAAoB1C,EAAU,wBAC9B2C,mBAAoB3C,EAAU,4BAG9B4C,cAAkB5C,EAAU,mBAC5B6C,eAAkB7C,EAAU,mBAC5B8C,iBAAkB9C,EAAU,0BAC5B+C,gBAAkB/C,EAAU,sBAC5BgD,iBAAkBhD,EAAU,0BAG5BiD,cAAkBjD,EAAU,mBAC5BkD,eAAkBlD,EAAU,mBAC5BmD,iBAAkBnD,EAAU,0BAC5BoD,gBAAkBpD,EAAU,sBAC5BqD,iBAAkBrD,EAAU,0BAC5BsD,iBAAkBtD,EAAU,0BAG5BuD,cAAkBvD,EAAU,mBAC5BwD,eAAkBxD,EAAU,mBAC5ByD,iBAAkBzD,EAAU,0BAC5B0D,gBAAkB1D,EAAU,sBAC5B2D,iBAAkB3D,EAAU,0BAC5B4D,iBAAkB5D,EAAU,0BAG5B6D,mBAAuB7D,EAAU,wBACjC8D,oBAAuB9D,EAAU,wBACjC+D,sBAAuB/D,EAAU,+BACjCgE,qBAAuBhE,EAAU,2BACjCiE,sBAAuBjE,EAAU,+BACjCkE,kBAAuBlE,EAAU,8BACjCmE,mBAAuBnE,EAAU,8BAGjCoE,cAAkBpE,EAAU,mBAC5BqE,eAAkBrE,EAAU,mBAC5BsE,iBAAkBtE,EAAU,0BAC5BuE,gBAAkBvE,EAAU,sBAC5BwE,iBAAkBxE,EAAU,0BAG5ByE,iBAAqBzE,EAAU,uBAC/B0E,kBAAqB1E,EAAU,uBAC/B2E,oBAAqB3E,EAAU,8BAC/B4E,mBAAqB5E,EAAU,0BAC/B6E,oBAAqB7E,EAAU,8BAI/B8E,gBAAmB9E,EAAU,wBAC7B+E,eAAmB/E,EAAU,wBAC7BgF,kBAAmBhF,EAAU,0BAC7BiF,kBAAmBjF,EAAU,0BAC7BkF,iBAAmBlF,EAAU,6BAC7BmF,kBAAqBnF,EAAU,6B,kTCpInCoF,G,OAASC,EAAQ,MAErB,SAASC,EAASC,GACd,IAAIC,EAAe,oBACnB,GAAGD,GAA2B,KAAlBA,EAAME,QACd,OAAQF,EAAMG,MACV,IAAK,WACDF,EAAc,gBACd,MACJ,IAAK,MACDA,EAAc,6BACd,MACJ,IAAK,MACDA,EAAc,6BACd,MACJ,IAAK,YACDA,EAAc,2BACd,MACJ,IAAK,YACDA,EAAc,+BAKpB,GAAGD,EACL,OAAQA,EAAMG,MACV,IAAK,WACDF,EAAeD,EAAME,QACrB,MACJ,IAAK,MACDD,EAAc,2BAA4BD,EAAME,QAChD,MACJ,IAAK,MACDD,EAAc,4BAA6BD,EAAME,QACjD,MACJ,IAAK,YACDD,EAAc,sCAAuCD,EAAME,QAC3D,MACJ,IAAK,YACDD,EAAc,uCAAwCD,EAAME,QAC5D,MACJ,QACID,EAAeD,EAAME,QAIjC,OAAOD,EAGX,SAASG,EAAUC,GACf,IAAIJ,EAAeF,EAASM,EAAMC,OAAOD,EAAME,OAC/C,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAQF,EAAMG,OACd,kBAAC,IAAD,CACID,KAAYF,EAAME,KAClBE,QAAYJ,EAAMC,OAAOD,EAAME,QAAS,EACxCG,SAAYL,EAAMK,SAClBC,SAAYN,EAAMO,KAClBT,KAAYE,EAAMF,KAClBH,MAAYK,EAAML,MAClBa,KAAYR,EAAMQ,KAClBC,WAAYT,EAAMS,UAAWT,EAAMS,WAEvC,kBAAC,IAAD,KAAeT,EAAMC,OAAOD,EAAME,OAASN,IAIvD,SAASc,EAASV,GAAQ,IAAD,EACWW,mBAASX,EAAML,OAD1B,mBACdiB,EADc,KACJC,EADI,KAoCfC,EAAU,SAACC,GAAqB,IAAdC,EAAa,uDAAT,KACxBH,EAAYG,GACZhB,EAAMK,UAAYL,EAAMK,SAASU,EAAOC,IAExCpB,EAAeF,EAASM,EAAMC,OAAOD,EAAME,OAC/C,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAQF,EAAMG,OACd,kBAAC,IAAD,CACIL,KAAW,OACXO,SAAY,SAACU,GAAD,OA3CG,SAAAA,GACvB,GAAGA,EAAME,OAAOC,MAAM,GAElB,GAAW,UADDH,EAAME,OAAOC,MAAM,GAAGpB,KAAKqB,MAAM,KAAK,GAE5CC,IAAKC,KAAK,CACNC,MAAmB,SACnBC,KAAmB,oBACnBC,KAAmB,QACnBC,kBAAmB,OAEvBX,EAAQC,OACP,CACD,IAAIW,GAAY,EACbX,EAAME,OAAOC,MAAM,KAClBQ,GAAY,GAEbA,GACCC,IAAQC,iBACJb,EAAME,OAAOC,MAAM,GACnB,IACA,IACA,MACA,IACA,GACA,SAAAF,GAASF,EAAQC,EAAOC,KACxB,eAKZF,EAAQC,GAamBc,CAAmBd,IAC1Ce,OAAW,YAEdlB,EAAW,yBAAKmB,MAAO,CAACC,MAAM,SAAUC,IAAKrB,IAAc,KAC5D,kBAAC,IAAD,CACIN,SAAYN,EAAMO,KAClBT,KAAW,SACXI,KAAYF,EAAME,KAClBE,QAAYJ,EAAMC,OAAOD,EAAME,QAAS,EACxCP,MAAYiB,GAAY,KAE5B,kBAAC,IAAD,KAAeZ,EAAMC,OAAOD,EAAME,OAASN,IAKvD,SAASsC,EAASlC,GACd,IAAIJ,EAAeF,EAASM,EAAMC,OAAOD,EAAME,OAC3CiC,EAAW,KACXC,EAAW,KAHK,EAIUzB,mBAASX,EAAML,OAJzB,mBAIbA,EAJa,KAIN0C,EAJM,KAKjBrC,EAAML,QACLwC,EAAY3C,EAAOQ,EAAML,OAAO2C,OAAO,cACvCF,EAAY5C,EAAOQ,EAAML,OAAO2C,OAAO,UAPvB,MASU3B,mBAASwB,GATnB,mBASbI,EATa,KASJC,EATI,OAUU7B,mBAASyB,GAVnB,mBAUbK,EAVa,KAUJC,EAVI,KAoDpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAQ1C,EAAMG,OACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKwC,GAAG,KACJ,kBAAC,IAAD,CACItC,SAAc,SAACuC,GAAD,OA9Cf,SAAAA,GACf,IAAIC,EAAS,KACb,GAAgB,kBAAND,EACNP,EAAS,MACTS,QAAQC,IAAI,iBACX,CACD,IAAIC,EAASJ,EAAEK,GACFD,EAAKE,UACLF,EAAKG,WACLH,EAAKI,cAElBP,EAASrD,EAAOwD,GAAMV,OAAO,cAE7BE,EAAWK,GACI,OAAZJ,GACHJ,EAASQ,EAAS,IAAMJ,GAEzBzC,EAAMK,UACTL,EAAMK,SAASuC,GA4BsBS,CAAWT,IAChCU,WAAa,qBACbC,YAAc,EACdC,OAAa,KACb7D,MAAc4C,GAAW/C,EAAO+C,GAASD,OAAO,yBAGxD,kBAAC,IAAD,CAAKK,GAAG,KACJ,kBAAC,IAAD,CACItC,SAAc,SAACuC,GAAD,OAnCf,SAAAA,GACf,IAAIC,EAAS,KACb,GAAgB,kBAAND,EACNP,EAAS,MACTS,QAAQC,IAAI,iBACX,CACD,IAAIC,EAASJ,EAAEK,GACFD,EAAKS,WACLT,EAAKU,aACLV,EAAKW,aAClBd,EAASrD,EAAOwD,GAAMV,OAAO,SAG7BI,EAAWG,GACI,OAAZN,GACHF,EAASE,EAAU,IAAMM,GAE1B7C,EAAMK,UACTL,EAAMK,SAASuC,GAiBsBgB,CAAWhB,IAChCU,YAAc,EACdC,WAAa,QACbC,OAAa,KACb7D,MAAc8C,MAI1B,kBAAC,IAAD,CACInC,SAAYN,EAAMO,KAClBT,KAAW,SACXI,KAAYF,EAAME,KAClBE,QAAYJ,EAAMC,OAAOD,EAAME,QAAS,EACxCP,MAAYA,GAAS,KAEzB,kBAAC,IAAD,KAAeK,EAAMC,OAAOD,EAAME,OAASN,IAKvD,SAASiE,EAAW7D,GAChB,IAAIJ,EAAeF,EAASM,EAAMC,OAAOD,EAAME,OAC/C,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAQF,EAAMG,OACd,kBAAC,IAAD,CACID,KAAYF,EAAME,KAClBE,QAAYJ,EAAMC,OAAOD,EAAME,QAAS,EACxCG,SAAYL,EAAMK,SAClBC,SAAYN,EAAMO,KAClBT,KAAW,SACXH,MAAYK,EAAML,OAEjBK,EAAM8D,KAAKC,KAAI,SAACC,EAAQC,GAAT,OACZ,4BAAQA,IAAKA,EAAKtE,MAAOqE,EAAOrE,OAC/BqE,EAAO9D,UAIhB,kBAAC,IAAD,KAAeF,EAAMC,OAAOD,EAAME,OAASN,M,iCCnPvD,4HAGA,SAASsE,EAAWJ,GAChB,GAAuB,IAApBA,EAAKK,WACJ,OAAO,EACkB,IAApBL,EAAKK,WACV/C,IAAKC,KAAK,CACNC,MAAmB,SACnBC,KAAmBuC,EAAKM,YACxB5C,KAAmB,QACnBC,kBAAmB,OAEE,MAApBqC,EAAKK,aACVE,aAAaC,WAAW,SACxBD,aAAaC,WAAW,YACxBlD,IAAKC,KAAK,CACNC,MAAmB,eACnBC,KAAmBuC,EAAKM,YACxB5C,KAAmB,QACnBC,kBAAmB,KACnB8C,mBAAmB,EACnBC,gBAAmB,IACpBC,MAAK,SAAC5B,GACL6B,OAAOC,SAASC,QAAO,OAInC,SAASC,IACLzD,IAAKC,KAAK,CACNC,MAAO,OACPwD,kBAAkB,EAClBP,mBAAmB,EACnBC,gBAAmB,EACnBO,aAAc,WACV3D,IAAK4D,iBAKjB,SAASC,EAAOC,GAIZ,IAHA,IAAIrC,EAAmB,GACnBsC,EAAmB,iEACnBC,EAAmBD,EAAWD,OACxBG,EAAI,EAAGA,EAAIH,EAAQG,IAC1BxC,GAAUsC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAE1D,OAAOvC,I,mLC5CL6C,EAAY,OACZC,EAAa,QAMbC,EAAQ,SAACC,EAAMC,GAInB,IAJqC,IAAdC,EAAa,uDAAN,EAC1BV,EAAIQ,EACFD,EAAQ,GAEPP,GAAKS,GACVF,EAAMI,KAAKX,GACXA,GAAKU,EAGP,OAAOH,GAyLMK,E,YApLb,WAAYjG,GAAQ,IAAD,uBACjB,4CAAMA,KAyBRkG,SAAW,SAAAC,GAAS,IAAD,EACkB,EAAKnG,MAAhCoG,qBADS,MACO,SAAAC,GAAC,OAAIA,GADZ,EAGXC,EAAcf,KAAKgB,IAAI,EAAGhB,KAAKiB,IAAIL,EAAMZ,KAAKkB,KAAK,EAAKzG,MAAM0G,aAAe,EAAK1G,MAAM2G,aAExFC,EAAiB,CACrBN,cACAO,WAAYtB,KAAKkB,KAAK,EAAKzG,MAAM0G,aAAe,EAAK1G,MAAM2G,WAC3DA,UAAW,EAAK3G,MAAM2G,UACtBD,aAAc,EAAK1G,MAAM0G,cAG3B,EAAKI,SAAS,CAAER,gBAAe,kBAAMF,EAAcQ,OAtClC,EAyCnBG,YAAc,SAAAZ,GAAI,OAAI,SAAAa,GACpBA,EAAIC,iBACJ,EAAKf,SAASC,KA3CG,EA8CnBe,eAAiB,SAAAF,GACfA,EAAIC,iBACJ,EAAKf,SAAS,EAAKiB,MAAMb,YAAqC,EAAtB,EAAKc,eAAsB,IAhDlD,EAmDnBC,gBAAkB,SAAAL,GAChBA,EAAIC,iBACJ,EAAKf,SAAS,EAAKiB,MAAMb,YAAqC,EAAtB,EAAKc,eAAsB,IArDlD,EAmEnBE,iBAAmB,WAEjB,IAAMT,EAAatB,KAAKkB,KAAK,EAAKzG,MAAM0G,aAAe,EAAK1G,MAAM2G,WAC5DL,EAAc,EAAKa,MAAMb,YACzBc,EAAiB,EAAKA,eAMtBG,EAAsC,EAAtB,EAAKH,eAAsB,EAGjD,GAAIP,EAFgBU,EAAe,EAEL,CAE5B,IAAMC,EAAYjC,KAAKgB,IAAI,EAAGD,EAAcc,GACtCK,EAAUlC,KAAKiB,IAAIK,EAAa,EAAGP,EAAcc,GAEnDM,EAAQ9B,EAAM4B,EAAWC,GAOvBE,EAAeH,EAAY,EAC3BI,EAAiBf,EAAaY,EAAW,EACzCI,EAAcN,GAAgBG,EAAMxC,OAAS,GAEnD,QAAQ,GAEN,KAAMyC,IAAiBC,EACrB,IAAME,EAAalC,EAAM4B,EAAYK,EAAaL,EAAY,GAC9DE,EAAK,CAAIhC,GAAJ,mBAAkBoC,GAAlB,YAAiCJ,IACtC,MAIF,KAAOC,GAAgBC,EACrB,IAAME,EAAalC,EAAM6B,EAAU,EAAGA,EAAUI,GAChDH,EAAK,sBAAOA,GAAP,YAAiBI,GAAjB,CAA6BnC,IAClC,MAIF,KAAMgC,GAAgBC,EACtB,QACEF,EAAK,CAAIhC,GAAJ,mBAAkBgC,GAAlB,CAAyB/B,IAKlC,MAAM,CAAE,GAAR,mBAAc+B,GAAd,CAAqBb,IAIvB,OAAOjB,EAAM,EAAGiB,IA3HC,MAEmD7G,EAA5D0G,oBAFS,MAEM,KAFN,IAEmD1G,EAAvC2G,iBAFZ,MAEwB,GAFxB,IAEmD3G,EAAvBoH,sBAF5B,MAE6C,EAF7C,SAIjB,EAAKT,UAAiC,kBAAdA,EAAyBA,EAAY,GAC7D,EAAKD,aAAuC,kBAAjBA,EAA4BA,EAAe,EAGtE,EAAKU,eAA2C,kBAAnBA,EACzB7B,KAAKgB,IAAI,EAAGhB,KAAKiB,IAAIY,EAAgB,IACrC,EAEJ,EAAKP,WAAatB,KAAKkB,KAAK,EAAKC,aAAe,EAAKC,WAErD,EAAKQ,MAAQ,CAAEb,YAAa,GAdX,E,uFAiBOyB,GACrBA,EAAUpB,YAAYqB,KAAKhI,MAAM2G,WAClCqB,KAAK9B,SAAS,K,0CAIhB8B,KAAK9B,SAAS,K,+BAwGN,IAAD,OACP,IAAK8B,KAAKhI,MAAM0G,cAA8E,IAA9DnB,KAAKkB,KAAKuB,KAAKhI,MAAM0G,aAAesB,KAAKhI,MAAM2G,WAAkB,OAAO,KADjG,IAGCL,EAAgB0B,KAAKb,MAArBb,YACFoB,EAAQM,KAAKV,mBAEnB,OACE,kBAAC,WAAD,KACE,yBAAKW,aAAW,wBACd,wBAAIC,UAAU,yBACVR,EAAM3D,KAAI,SAACoC,EAAMgC,GAEjB,OAAIhC,IAAST,EACX,wBAAIzB,IAAKkE,EAAOD,UAAU,aACxB,uBAAGA,UAAU,YAAYE,KAAK,IAAIH,aAAW,WAAWI,QAAS,EAAKnB,gBACpE,0BAAMoB,cAAY,QAAlB,QACA,0BAAMJ,UAAU,WAAhB,cAKF/B,IAASR,EACX,wBAAI1B,IAAKkE,EAAOD,UAAU,aACxB,uBAAGA,UAAU,YAAYE,KAAK,IAAIH,aAAW,OAAOI,QAAS,EAAKhB,iBAChE,0BAAMiB,cAAY,QAAlB,QACA,0BAAMJ,UAAU,WAAhB,UAMJ,wBAAIjE,IAAKkE,EAAOD,UAAS,mBAAe5B,IAAgBH,EAAO,UAAY,KACzE,uBAAG+B,UAAU,YAAYE,KAAK,IAAIC,QAAU,EAAKtB,YAAYZ,IAAUA,c,GAjKhEoC,a,sCClBJC,E,YACjB,WAAYxI,GAAQ,IAAD,8BACjB,4CAAMA,KAkCRoG,cAAgB,SAAAtC,GAAS,IACfwC,EAAgBxC,EAAhBwC,YACR,EAAKQ,SAAS,CAACX,KAAMG,IAAc,WACjC,EAAKmC,mBAtCU,EAyCnBC,aAAe,SAAA3H,GACb,EAAK+F,SAAS,CAAC6B,OAAQ5H,EAAME,OAAOtB,MAAOwG,KAAM,IAAI,WACnD,EAAKsC,mBA3CU,EA8CnBG,UAAY,SAAA7H,GACV,EAAK+F,SAAS,CAAC+B,IAAK9H,EAAME,OAAOtB,MAAOwG,KAAM,IAAI,WAChD,EAAKsC,mBA9CP,EAAKtB,MAAQ,CACX2B,KAAY,KACZC,WAAY,EACZ5C,KAAY,EACZwC,OAAY,GACZE,IAAY,GAPG,E,qEAWXG,GAAK,IAGHC,EAHE,OAELD,IAAQhB,KAAKb,MAAM2B,MAES,IAA1Bd,KAAKb,MAAM4B,WACZE,EAAS,EACyB,IAA1BjB,KAAKb,MAAM4B,WACnBE,EAAS,GAETA,EAAS,EACTD,EAAM,MAERhB,KAAKlB,SAAS,CAACgC,KAAME,EAAKD,WAAYE,IAAS,WAC7C,EAAKR,mBAIPT,KAAKlB,SAAS,CAACgC,KAAME,EAAKD,WAAY,IAAI,WACxC,EAAKN,oB,sCAsBG3E,GACd,IAAMoF,EAAM,GACZ,IAAK,IAAIC,KAAKrF,EACTA,EAAKqF,IACRD,EAAIlD,KAAKoD,mBAAmBD,GAAK,IAAMC,mBAAmBtF,EAAKqF,KAEjE,OAAOD,EAAIG,KAAK,O,qCAGhB,IAAI1J,EAAQ,CACRwG,KAAQ6B,KAAKb,MAAMhB,KACnB0C,IAAQb,KAAKb,MAAM0B,IACnBF,OAAQX,KAAKb,MAAMwB,OACnBW,GAAQtB,KAAKb,MAAM2B,KACnBA,KAAQd,KAAKb,MAAM4B,YAEvBf,KAAKhI,MAAMuJ,cACT,CACEC,MAAYxB,KAAKyB,gBAAgB9J,O,kCAI3B+J,GAIV,IAJmB,IAAD,OACdlI,EAAQ,CAAC,wBAAyB,4BAA6B,8BAC/DmI,EAAQ,CAAC,UAAW,QAAS,SAC7BhK,EAAQ,GAHM,WAIT0F,GACHrD,EAAQ0H,EAAQrE,GAAGrD,MAAQ0H,EAAQrE,GAAGrD,MAAQ,KAE1B,OAArB0H,EAAQrE,GAAGuE,QAAsC,IAApBF,EAAQrE,GAAGyD,KACzCnJ,EAAMqG,KAAK,wBAAIhE,MAAOA,EAAOD,MAAO,CAAC8H,OAAQ,WAAYxB,QAAS,kBAAM,EAAKyB,QAAQJ,EAAQrE,GAAGuE,QAAQ3F,IAAKoB,GAAIqE,EAAQrE,GAAG/D,MAAjH,KAAyH,uBAAGS,MAAO,CAAC4H,MAAO,EAAKxC,MAAM2B,OAASY,EAAQrE,GAAGuE,MAAQD,EAAM,EAAKxC,MAAM4B,YAAcY,EAAM,IAAKzB,UAAW,EAAKf,MAAM2B,OAASY,EAAQrE,GAAGuE,MAAQpI,EAAK,EAAK2F,MAAM4B,YAAcvH,EAAK,OAE5T7B,EAAMqG,KAAK,wBAAIhE,MAAOA,EAAOiC,IAAKoB,GAAIqE,EAAQrE,GAAG/D,SAN5C+D,EAAI,EAAGA,EAAIqE,EAAQxE,OAAQG,IAAK,CAAC,IACpCrD,EADmC,EAAhCqD,GAST,OACE,+BACE,4BACG1F,M,gCAMCmE,EAAM4F,GACd,IAAIK,EACJ,GAAW,MAARjG,EAAa,CACd,IAAIkG,EAAKlG,EAAK+B,KAGdkE,EAAOjG,EAAKA,KAAKC,KAAI,SAASkG,EAAM5E,GAGlC,IAFA,IAAI6E,EAAQ,GAEH/B,EAAQ,EAAGA,EAAQuB,EAAQxE,OAAQiD,IACvCuB,EAAQvB,GAAOgC,SAChBD,EAAMlE,KAAK,wBAAI/B,IAAKkE,GAAQuB,EAAQvB,GAAOgC,SAASF,EAAM5E,EAAG2E,OAE7DE,EAAMlE,KAAK,wBAAI/B,IAAKkE,GAAQ8B,EAAKP,EAAQvB,GAAOyB,SAIpD,OACE,wBAAI3F,IAAKoB,GACN6E,MAKT,OAAOH,I,+BAGP,OACE,kBAAC,IAAMK,SAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAI7H,GAAG,KACrB,kBAAC8H,EAAA,EAAD,CAAW5B,KAAG,GACV,kBAACyB,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAI7H,GAAG,KACrB,kBAAC+H,EAAA,EAAD,CAAOrK,SAAU2H,KAAKY,UAAW9I,KAAK,SAASI,KAAK,OAAOyK,GAAG,QAC5D,4BAAQhL,MAAM,KAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,eAMV,kBAAC2K,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAI7H,GAAG,KACrB,kBAAC8H,EAAA,EAAD,CAAW5B,KAAG,GACZ,kBAACyB,EAAA,EAAD,CAAK3H,GAAG,MACN,kBAACiI,EAAA,EAAD,CAAY1C,UAAU,eACpB,kBAAC2C,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACC,EAAA,EAAD,CAAQjL,KAAK,SAAS6J,MAAM,WAAU,uBAAGzB,UAAU,iBAAnD,YAEF,kBAACwC,EAAA,EAAD,CAAOrK,SAAU2H,KAAKU,aAAc5I,KAAK,OAAO6K,GAAG,gBAAgBzK,KAAK,gBAAgB8K,YAAY,wBAO9G,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAQ,EAACC,SAAO,EAACC,YAAU,GACnCrD,KAAKsD,YAAYtD,KAAKhI,MAAM0J,SAC/B,+BAEI1B,KAAKhI,MAAMuL,QACX,4BACE,wBAAIC,QAASxD,KAAKhI,MAAM0J,QAAQxE,OAAQuG,MAAM,UAA9C,eAKFzD,KAAK0D,UAAU1D,KAAKhI,MAAM8D,KAAMkE,KAAKhI,MAAM0J,WAM9B,MAAnB1B,KAAKhI,MAAM8D,KACT,kBAACuG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAI7H,GAAG,KACrB,uCAAaqF,KAAKhI,MAAM8D,KAAK+B,KAA7B,OAAuCmC,KAAKhI,MAAM8D,KAAKgC,GAAvD,OAA+DkC,KAAKhI,MAAM8D,KAAK6H,MAA/E,aAEF,kBAACrB,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAI7H,GAAG,KACrB,kBAAC,EAAD,CAAY+D,aAAcsB,KAAKhI,MAAM8D,KAAK6H,MAAOhF,UAAWiF,SAAS5D,KAAKhI,MAAM8D,KAAK+H,UAAWzE,eAAgB,EAAGhB,cAAe4B,KAAK5B,kBAI3I,U,GAtL2BmC,c,mTCOvC,SAASuD,EAAI9L,GAAO,IAAD,EACiC+L,cAA1CC,EADS,EACTA,SAAUC,EADD,EACCA,aAAchM,EADf,EACeA,OAAQiM,EADvB,EACuBA,MADvB,EAEavL,oBAAS,GAFtB,mBAEV4K,EAFU,KAEDY,EAFC,KA4CjB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK5B,GAAG,KAAKC,GAAG,KAAK7H,GAAG,MACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,+CACA,yBAAKuF,UAAU,uBACb,kBAAC,IAAD,CAAQG,QAAS,kBAAKrI,EAAMqI,WAAW+D,OAAK,EAACC,SAAO,EAAC1C,MAAM,WACzD,uBAAGzB,UAAU,iBACZ,IAAI,yCAIb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMoE,SAAUL,GAvDjB,SAAAnI,GACf1C,IAAKC,KAAK,CACRC,MAAmB,uBACnBE,KAAmB,OACnBD,KAAmB,sBACnBgL,kBAAmB,EACnBC,cAAmB,EACnB/K,kBAAmB,KACnBgL,iBAAmB,WAClBhI,MAAK,SAAC5B,GACJA,EAAOlD,QACRwM,GAAW,GACXO,IAAMC,KAAK5R,cAAM6B,iBAAkBrC,YAAOuJ,GAAOnJ,YAAO0J,aAAauI,QAAQ,WAC5EnI,MAAK,SAACoI,GACH,IAAIC,EAAMD,EAAS/I,KACNI,YAAW4I,KAGtB1L,IAAKC,KAAK,CACRC,MAAmB,UACnBC,KAAmBuL,EAAI1I,YACvB5C,KAAmB,UACnBC,kBAAmB,OAErB0K,GAAW,GACXD,IACAlM,EAAM+M,aAAY,OAGvBC,OAAM,SAACC,GACN7L,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAM0L,EAAMC,WACZ1L,KAAM,QACNC,kBAAmB,OAErB0K,GAAW,cAoBC,kBAAC,IAAD,CACE5L,KAAMyL,EAAS,CACXmB,UAAW,EACXC,UAAW,CAACzN,MAAO,IAAKE,QAAS,SAErCK,KAAS,cACTC,MAAS,cACTL,KAAS,OACTG,OAAUA,IAEZ,kBAAC,IAAD,CACEM,KAAMyL,EAAS,CACXmB,UAAW,EACXC,UAAW,CAACzN,MAAO,GAAIE,QAAS,QAEpCK,KAAS,eACTC,MAAS,eACTF,OAAUA,EACVH,KAAS,SAEX,kBAAC,IAAD,CAAQA,KAAK,SAASuN,KAAK,KAAK1D,MAAM,UAAUlJ,SAAU8K,GAA1D,IAAqEA,EAAU,kBAAC,eAAD,CAAc8B,KAAM,GAAI1D,MAAM,SAAY,8BAAM,uBAAGzB,UAAU,uBAAnB,iBAS/I,SAASoF,EAAOtN,GAAO,IAAD,EAC8B+L,YAAQ,CACxDwB,cAAe,CACbC,YAAaxN,EAAM8D,KAAK0J,YACxBC,aAAgBzN,EAAM8D,KAAK2J,gBAHvBzB,EADY,EACZA,SAAUC,EADE,EACFA,aAAchM,EADZ,EACYA,OAAQiM,EADpB,EACoBA,MADpB,EAOUvL,oBAAS,GAPnB,mBAOb4K,EAPa,KAOJY,EAPI,KAoDpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK5B,GAAG,KAAKC,GAAG,KAAK7H,GAAG,MACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,6CACA,yBAAKuF,UAAU,uBACb,kBAAC,IAAD,CAAQG,QAAS,kBAAKrI,EAAMqI,WAAW+D,OAAK,EAACC,SAAO,EAAC1C,MAAM,WACzD,uBAAGzB,UAAU,iBACZ,IAAI,yCAIb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMoE,SAAUL,GAzDjB,SAAAnI,GACf1C,IAAKC,KAAK,CACRC,MAAmB,uBACnBE,KAAmB,OACnBD,KAAmB,qBACnBgL,kBAAmB,EACnBC,cAAmB,EACnB/K,kBAAmB,KACnBgL,iBAAmB,WAClBhI,MAAK,SAAC5B,GACJA,EAAOlD,QACRwM,GAAW,GACXO,IAAMC,KAAK5R,cAAMgC,mBAAoBxC,YAAOuJ,GAAOnJ,YAAO0J,aAAauI,QAAQ,WAC9EnI,MAAK,SAACoI,GACH,IAAIC,EAAMD,EAAS/I,KACNI,YAAW4I,KAGtB1L,IAAKC,KAAK,CACRC,MAAmB,UACnBC,KAAmBuL,EAAI1I,YACvB5C,KAAmB,UACnBC,kBAAmB,OAErB0K,GAAW,GACXD,IACAlM,EAAMqI,UACNrI,EAAM+M,aAAY,OAGvBC,OAAM,SAACC,GACN7L,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAM0L,EAAMC,WACZ1L,KAAM,QACNC,kBAAmB,OAErB0K,GAAW,cAqBC,2BAAOuB,IAAK1B,IAAYlM,KAAK,SAASI,KAAK,KAAKP,MAAOK,EAAM8D,KAAK6J,YAClE,kBAAC,IAAD,CACEpN,KAAMyL,EAAS,CACXmB,UAAW,EACXC,UAAW,CAACzN,MAAO,IAAKE,QAAS,SAErCK,KAAS,cACTC,MAAS,cACTL,KAAS,OACTG,OAAUA,IAEZ,kBAAC,IAAD,CACEM,KAAMyL,EAAS,CACXmB,UAAW,EACXC,UAAW,CAACzN,MAAO,GAAIE,QAAS,QAEpCK,KAAS,eACTC,MAAS,eACTF,OAAUA,EACVH,KAAS,SAEX,kBAAC,IAAD,CAAQA,KAAK,SAASuN,KAAK,KAAK1D,MAAM,UAAUlJ,SAAU8K,GAA1D,IAAqEA,EAAU,kBAAC,eAAD,CAAc8B,KAAM,GAAI1D,MAAM,SAAY,8BAAM,uBAAGzB,UAAU,uBAAnB,e,IAS1H0F,E,YACnB,WAAY5N,GAAQ,IAAD,8BACjB,4CAAMA,KAaR0J,QAAU,CACR,CACEpI,MAAU,GACVsI,MAAU,KACV5H,MAAU,GACVmI,SAAU,SAACtB,GACT,OAAQ,kBAAC,IAAMuB,SAAP,KACE,kBAAC,IAAD,CAAQ/B,QAAS,kBAAM,EAAKwF,SAAShF,EAAI8E,YAAYrM,MAAM,QAAQ4G,UAAU,oCAC3E,uBAAGA,UAAU,eAFjB,IAGa,MACX,kBAAC,IAAD,CAAQG,QAAS,kBAAM,EAAKyF,SAASjF,EAAI8E,YAAYrM,MAAM,OAAO4G,UAAU,4CAC1E,uBAAGA,UAAU,mBAM7B,CACE5G,MAAO,cACPsI,MAAO,eAET,CACCtI,MAAO,eACPsI,MAAO,eACP5H,MAAU,MAtCM,EAgEnBuH,cAAgB,SAAAzF,GAAS,IACf0F,EAAU1F,EAAV0F,MACR,EAAK1C,SAAS,CAAC0C,MAAOA,IAAQ,WAC5B,EAAKuE,cAjEP,EAAK5G,MAAQ,CACZrD,KAAa,KACbyH,SAAa,EACb/B,MAAa,eACbwE,aAAa,EACbC,SAAa,EACbC,YAAa,EACbC,WAAa,MATG,E,iFA2CjBnG,KAAK+F,Y,gCAGG,IAAD,OACP/F,KAAKlB,SAAS,CAACyE,SAAS,IACxBmB,IAAM0B,IAAIrT,cAAM4B,gBAAkB,IAAMqL,KAAKb,MAAMqC,MAAO7O,YAAO0J,aAAauI,QAAQ,WACrFnI,MAAK,SAACoI,GACH,IAAIC,EAAMD,EAAS/I,KACNI,YAAW4I,IAExB,EAAKhG,SAAS,CAAChD,KAAMgJ,EAAIhJ,KAAMyH,SAAS,OACzCyB,OAAM,SAACC,GACR7L,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAM0L,EAAMC,WACZ1L,KAAM,QACNC,kBAAmB,Y,+BAYhBkJ,GAAI,IAAD,OACVvJ,IAAKC,KAAK,CACRC,MAAmB,uBACnBE,KAAmB,OACnBD,KAAmB,uBACnBgL,kBAAmB,EACnBC,cAAmB,EACnB/K,kBAAmB,KACnBgL,iBAAmB,WAClBhI,MAAK,SAAC5B,GACJA,EAAOlD,QACRkF,cACA6H,IAAMC,KAAK5R,cAAM8B,mBAAoBtC,YAAO,CAACoQ,GAAIA,IAAMhQ,YAAO0J,aAAauI,QAAQ,WAClFnI,MAAK,SAACoI,GACH,IAAIC,EAAMD,EAAS/I,KACNI,YAAW4I,KAEtB1L,IAAKC,KAAK,CACRC,MAAmB,UACnBC,KAAmBuL,EAAI1I,YACvB5C,KAAmB,UACnBC,kBAAmB,OAErB,EAAKsM,cAGVf,OAAM,SAACC,GACN7L,IAAKC,KAAK,CACRC,MAAmB,SACnBC,KAAmB0L,EAAMC,WACzB1L,KAAmB,QACnBC,kBAAmB,gB,+BAOpBkJ,GAAI,IAAD,OACVjG,OAAO2J,SAAS,EAAE,GAClBrG,KAAKlB,SAAS,CAACqH,WAAY,KAAMD,YAAY,EAAOF,aAAa,EAAMC,SAAS,IAChFvB,IAAM0B,IAAIrT,cAAM+B,kBAAoB,OAAO6N,EAAIhQ,YAAO0J,aAAauI,QAAQ,WAC1EnI,MAAK,SAACoI,GACH,IAAIC,EAAMD,EAAS/I,KACNI,YAAW4I,IAExB,EAAKhG,SAAS,CAACqH,WAAYrB,EAAIhJ,KAAMoK,YAAY,EAAMF,aAAa,OACrEhB,OAAM,SAACC,GACR7L,IAAKC,KAAK,CACRC,MAAO,SACPC,KAAM0L,EAAMC,WACZ1L,KAAM,QACNC,kBAAmB,Y,+BAOf,IAAD,OACP,OACE,kBAAC,IAAM2I,SAAP,KACE,kBAAC,IAAD,CAAKrI,MAAO,CAACuM,QAAS,OAAQC,eAAgB,SAAUC,aAAc,SACrExG,KAAKb,MAAM6G,YACV,kBAAC,eAAD,CAAcX,KAAM,GAAI1D,MAAM,SAE9B,MAGD3B,KAAKb,MAAM8G,QACZ,kBAACnC,EAAD,CACIzD,QAAW,kBAAI,EAAKvB,SAAS,CAACmH,SAAS,KACvClB,YAAe,SAACpN,GAAD,OAAW,EAAKoO,aAGnC,KAEC/F,KAAKb,MAAM+G,WACZ,kBAACZ,EAAD,CACIjF,QAAe,kBAAI,EAAKvB,SAAS,CAACoH,YAAY,KAC9CnB,YAAe,SAACpN,GAAD,OAAW,EAAKoO,WAC/BjK,KAAekE,KAAKb,MAAMgH,aAG9B,KAEA,yBAAKjG,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKqC,GAAG,KAAKC,GAAG,KAAK7H,GAAG,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,0CACA,yBAAKuF,UAAU,uBACXF,KAAKb,MAAM8G,QAMX,KALA,kBAAC,IAAD,CAAQ5F,QAAS,kBAAK,EAAKvB,SAAS,CAACmH,SAAS,EAAMC,YAAY,KAAS9B,OAAK,EAACC,SAAO,EAAC1C,MAAM,WAC3F,uBAAGzB,UAAU,sBACZ,IAAI,2CAOb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACIpE,KAAiBkE,KAAKb,MAAMrD,KAC5B4F,QAAiB1B,KAAK0B,QACtB6B,QAAiBvD,KAAKb,MAAMoE,QAC5BhC,cAAiBvB,KAAKuB,0B,GApLPhB","file":"static/js/45.1efc25aa.chunk.js","sourcesContent":["\r\nimport qs from \"qs\";\r\n\r\nexport const debug = true\r\n\r\nexport function ServerUrl(url){\r\n    if(debug){\r\n        return 'http://localhost/MJC/backend/public/' + url;\r\n    }else{\r\n        return 'http://localhost/MJC/backend/public/' + url;\r\n    }\r\n}\r\nexport function Assets(url){\r\n    if(debug){\r\n        return 'http://localhost/MJC/backend/storage/app/' + url;\r\n    }else{\r\n        return 'http://localhost/MJC/backend/storage/app/' + url;\r\n    }\r\n}\r\nexport function baseUrl(url){\r\n    if(debug){\r\n        return 'http://localhost:3000/#/' + url;\r\n    }else{\r\n        return 'http://localhost:3000/#/' + url;\r\n    }\r\n}\r\nexport function params(param){\r\n    return qs.stringify(param);\r\n}\r\nexport function formData(param){\r\n\r\n}\r\nexport function header(jwt, content='application/x-www-form-urlencoded'){\r\n    return {\r\n            headers:{\r\n                'Content-Type': `${content}`,\r\n                'Authorization': `Bearer ${jwt}`,\r\n            }\r\n        }\r\n}\r\n\r\nexport function API() {\r\n    return {\r\n        Login : ServerUrl('api/auth/login'),\r\n\r\n        //OPTION\r\n        getOptionCabang    : ServerUrl('api/master/option-cabang'),\r\n        getOptionLokasi    : ServerUrl('api/master/option-lokasi'),\r\n        getOptionTiang     : ServerUrl('api/master/option-tiang'),\r\n        getOptionMerk      : ServerUrl('api/master/option-merk'),\r\n        getOptionPerusahaan: ServerUrl('api/master/option-perusahaan'),\r\n        getOptionPriv      : ServerUrl('api/master/option-privilege'),\r\n        getOptionMenu      : ServerUrl('api/master/option-menu'),\r\n        getOptionCctv      : ServerUrl('api/master/option-cctv'),\r\n        getOptionKegiatan  : ServerUrl('api/master/option-kegiatan'),\r\n\r\n        //CRUD MASTER TIANG\r\n        getMasterTiang   : ServerUrl('api/master/tiang'),\r\n        postMasterTiang  : ServerUrl('api/master/tiang'),\r\n        deleteMasterTiang: ServerUrl('api/master/delete-tiang'),\r\n        getMasterTiangBy : ServerUrl('api/master/tiang-by'),\r\n        updateMasterTiang: ServerUrl('api/master/update-tiang'),\r\n\r\n        //CRUD MASTER PERUSAHAAN\r\n        postMasterPerusahaan  : ServerUrl('api/master/perusahaan'),\r\n        getMasterPerusahaan   : ServerUrl('api/master/perusahaan'),\r\n        deleteMasterPerusahaan: ServerUrl('api/master/delete-perusahaan'),\r\n        getMasterPerusahaanBy : ServerUrl('api/master/perusahaan-by'),\r\n        updateMasterPerusahaan: ServerUrl('api/master/update-perusahaan'),\r\n        getListAksesCctv      : ServerUrl('api/master/list-akses-cctv'),\r\n        postListAksesCctv     : ServerUrl('api/master/list-akses-cctv'),\r\n        \r\n        //CRUD MASTER LOKASI\r\n        getMasterLokasi   : ServerUrl('api/master/lokasi'),\r\n        postMasterLokasi  : ServerUrl('api/master/lokasi'),\r\n        deleteMasterLokasi: ServerUrl('api/master/delete-lokasi'),\r\n        getMasterLokasiBy : ServerUrl('api/master/lokasi-by'),\r\n        updateMasterLokasi: ServerUrl('api/master/update-lokasi'),\r\n\r\n        //CRUD MASTER CABANG\r\n        getMasterCabang   : ServerUrl('api/master/cabang'),\r\n        postMasterCabang  : ServerUrl('api/master/cabang'),\r\n        deleteMasterCabang: ServerUrl('api/master/delete-cabang'),\r\n        getMasterCabangBy : ServerUrl('api/master/cabang-by'),\r\n        updateMasterCabang: ServerUrl('api/master/update-cabang'),\r\n\r\n        //CRUD MASTER MERK\r\n        getMasterMerk   : ServerUrl('api/master/merk'),\r\n        postMasterMerk  : ServerUrl('api/master/merk'),\r\n        deleteMasterMerk: ServerUrl('api/master/delete-merk'),\r\n        getMasterMerkBy : ServerUrl('api/master/merk-by'),\r\n        updateMasterMerk: ServerUrl('api/master/update-merk'),\r\n\r\n        //CRUD MASTER CCTV\r\n        getMasterCctv   : ServerUrl('api/master/cctv'),\r\n        postMasterCctv  : ServerUrl('api/master/cctv'),\r\n        deleteMasterCctv: ServerUrl('api/master/delete-cctv'),\r\n        getMasterCctvBy : ServerUrl('api/master/cctv-by'),\r\n        updateMasterCctv: ServerUrl('api/master/update-cctv'),\r\n        detailMasterCctv: ServerUrl('api/master/detail-cctv'),\r\n\r\n        //CRUD MASTER USER\r\n        getMasterUser   : ServerUrl('api/master/user'),\r\n        postMasterUser  : ServerUrl('api/master/user'),\r\n        statusMasterUser: ServerUrl('api/master/status-user'),\r\n        getMasterUserBy : ServerUrl('api/master/user-by'),\r\n        updateMasterUser: ServerUrl('api/master/update-user'),\r\n        detailMasterUser: ServerUrl('api/master/detail-user'),\r\n\r\n        //CRUD MASTER PRIVILEGE\r\n        getMasterPrivilege   : ServerUrl('api/master/privilege'),\r\n        postMasterPrivilege  : ServerUrl('api/master/privilege'),\r\n        deleteMasterPrivilege: ServerUrl('api/master/delete-privilege'),\r\n        getMasterPrivilegeBy : ServerUrl('api/master/privilege-by'),\r\n        updateMasterPrivilege: ServerUrl('api/master/update-privilege'),\r\n        getListPermission    : ServerUrl('api/master/list-permission'),\r\n        postListPermission   : ServerUrl('api/master/list-permission'),\r\n\r\n        //CRUD MASTER MENU\r\n        getMasterMenu   : ServerUrl('api/master/menu'),\r\n        postMasterMenu  : ServerUrl('api/master/menu'),\r\n        deleteMasterMenu: ServerUrl('api/master/delete-menu'),\r\n        getMasterMenuBy : ServerUrl('api/master/menu-by'),\r\n        updateMasterMenu: ServerUrl('api/master/update-menu'),\r\n\r\n        //CRUD MASTER SUB MENU\r\n        getMasterSubmenu   : ServerUrl('api/master/sub-menu'),\r\n        postMasterSubmenu  : ServerUrl('api/master/sub-menu'),\r\n        deleteMasterSubmenu: ServerUrl('api/master/delete-sub-menu'),\r\n        getMasterSubmenuBy : ServerUrl('api/master/sub-menu-by'),\r\n        updateMasterSubmenu: ServerUrl('api/master/update-sub-menu'),\r\n\r\n        //MAINTENANCE\r\n        //ADD Maintenance\r\n        postMaintenance  : ServerUrl('api/maintenance/save'),\r\n        getMaintenance   : ServerUrl('api/maintenance/list'),\r\n        deleteMaintenance: ServerUrl('api/maintenance/delete'),\r\n        detailMaintenance: ServerUrl('api/maintenance/detail'),\r\n        getMaintenanceBy : ServerUrl('api/maintenance/update-by'),\r\n        updateMaintenance  : ServerUrl('api/maintenance/update'),\r\n    }\r\n}","import React, { Component, useState, useEffect  } from 'react';\r\nimport { FormGroup, Input, Label, FormFeedback, Col, Row} from 'reactstrap';\r\nimport Datetime from 'react-datetime';\r\nimport Resizer from 'react-image-file-resizer';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport 'moment/locale/id';\r\nvar moment = require('moment');\r\n\r\nfunction getError(value){\r\n    let errormessage = \"Mengalami masalah\";\r\n    if(value && value.message === \"\"){\r\n        switch (value.type) {\r\n            case 'required':\r\n                errormessage ='Wajib di isi.';\r\n                break;\r\n            case 'min':\r\n                errormessage ='Kurang dari nilai minimal.';\r\n                break;\r\n            case 'max':\r\n                errormessage ='Lebih dari nilai maksimal.';\r\n                break;\r\n            case 'minLength':\r\n                errormessage ='Panjang karakter kurang.';\r\n                break;\r\n            case 'maxLength':\r\n                errormessage ='Panjang karakter lebih.';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }else if(value){\r\n        switch (value.type) {\r\n            case 'required':\r\n                errormessage = value.message;\r\n                break;\r\n            case 'min':\r\n                errormessage ='Nilai harus lebih dari: ' +value.message;\r\n                break;\r\n            case 'max':\r\n                errormessage ='Nilai harus kurang dari: ' +value.message;\r\n                break;\r\n            case 'minLength':\r\n                errormessage ='Panjang karakter harus lebih dari: ' +value.message;\r\n                break;\r\n            case 'maxLength':\r\n                errormessage ='Panjang karakter harus kurang dari: ' +value.message;\r\n                break;\r\n            default:\r\n                errormessage = value.message;\r\n                break;\r\n        }\r\n    }\r\n    return errormessage;\r\n}\r\n\r\nfunction InputForm(props) {\r\n    let errormessage = getError(props.errors[props.name]);\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.label}</Label>\r\n            <Input \r\n                name     = {props.name}\r\n                invalid  = {props.errors[props.name] && true}\r\n                onChange = {props.onChange}\r\n                innerRef = {props.refs}\r\n                type     = {props.type}\r\n                value    = {props.value}\r\n                rows     = {props.rows}\r\n                disabled = {props.disabled ? props.disabled : false}\r\n            />\r\n            <FormFeedback>{props.errors[props.name] && errormessage}</FormFeedback>\r\n        </FormGroup>\r\n    )\r\n}\r\nfunction FileForm(props) {\r\n    const [fileFoto, setFileFoto] = useState(props.value);\r\n\r\n    const fileChangedHandler = event => {\r\n        if(event.target.files[0]){\r\n            var ext = event.target.files[0].type.split('/')[0];\r\n            if(ext !== 'image'){\r\n                Swal.fire({\r\n                    title            : 'Error!',\r\n                    text             : 'Hanya File Gambar',\r\n                    icon             : 'error',\r\n                    confirmButtonText: 'OK',\r\n                })\r\n                getFile(event)\r\n            }else{\r\n                var fileInput = false\r\n                if(event.target.files[0]) {\r\n                    fileInput = true\r\n                }\r\n                if(fileInput) {\r\n                    Resizer.imageFileResizer(\r\n                        event.target.files[0],\r\n                        600,\r\n                        600,\r\n                        'PNG',\r\n                        100,\r\n                        0,\r\n                        uri => { getFile(event, uri) },\r\n                        'base64'\r\n                    );\r\n                }\r\n            }\r\n        }else{\r\n            getFile(event)\r\n        }\r\n    }\r\n    const getFile = (event, uri=null) => {\r\n        setFileFoto(uri)\r\n        props.onChange && props.onChange(event, uri)\r\n    }\r\n    let errormessage = getError(props.errors[props.name]);\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.label}</Label>\r\n            <Input \r\n                type     = \"file\"\r\n                onChange = {(event) => fileChangedHandler(event)}\r\n                accept   = \"image/*\"\r\n            />\r\n            {fileFoto ? <img style={{width:'120px'}} src={fileFoto}/> : null}\r\n            <Input \r\n                innerRef = {props.refs}\r\n                type     = \"hidden\"\r\n                name     = {props.name}\r\n                invalid  = {props.errors[props.name] && true}\r\n                value    = {fileFoto || ''}\r\n            />\r\n            <FormFeedback>{props.errors[props.name] && errormessage}</FormFeedback>\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nfunction DateForm(props){\r\n    let errormessage = getError(props.errors[props.name]);\r\n    let dateInit = null;\r\n    let timeInit = null;\r\n    const [value, setValue]     = useState(props.value);\r\n    if(props.value){\r\n        dateInit =  moment(props.value).format(\"YYYY-MM-DD\");\r\n        timeInit =  moment(props.value).format(\"HH:mm\");\r\n    }\r\n    const [valdate, setValdate] = useState(dateInit);\r\n    const [valtime, setValtime] = useState(timeInit);\r\n\r\n    const handleDate = e => {\r\n        var result = null;\r\n        if(typeof e === 'string'){\r\n            setValue(null);\r\n            console.log('is string');\r\n        }else{\r\n            var date   = e._d;\r\n            var day    = date.getDate();\r\n            var month  = date.getMonth() + 1;\r\n            var year   = date.getFullYear();\r\n\r\n            result = moment(date).format(\"YYYY-MM-DD\");\r\n            // result = year + '-' + ('0' + month).slice(-2) + '-' +  ('0' + day).slice(-2);\r\n            setValdate(result);\r\n            if(valtime !== null)\r\n            setValue(result + ' ' + valtime);\r\n        }\r\n        if(props.onChange)\r\n        props.onChange(e);\r\n    }\r\n    const handleTime = e => {\r\n        var result = null;\r\n        if(typeof e === 'string'){\r\n            setValue(null);\r\n            console.log('is string');\r\n        }else{\r\n            var date   = e._d;\r\n            var hour   = date.getHours();\r\n            var minute = date.getMinutes();\r\n            var second = date.getSeconds();\r\n            result = moment(date).format(\"HH:mm\");\r\n\r\n            // result = ('0' + hour).slice(-2) + ':' + ('0' + minute).slice(-2) + ':' + ('0' + second).slice(-2)\r\n            setValtime(result);\r\n            if(valdate !== null)\r\n            setValue(valdate + ' ' + result);\r\n        }\r\n        if(props.onChange)\r\n        props.onChange(e);\r\n    }\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.label}</Label>\r\n            <Row>\r\n                <Col md=\"8\">\r\n                    <Datetime \r\n                        onChange   = {(e) => handleDate(e) }\r\n                        dateFormat = \"dddd, DD MMMM YYYY\"\r\n                        timeFormat = {false}\r\n                        locale     = \"id\"\r\n                        value      = {valdate && moment(valdate).format(\"dddd, DD MMMM YYYY\")}\r\n                    />\r\n                </Col>\r\n                <Col md=\"4\">\r\n                    <Datetime \r\n                        onChange   = {(e) => handleTime(e) }\r\n                        dateFormat = {false}\r\n                        timeFormat = \"HH:mm\"\r\n                        locale     = \"id\"\r\n                        value      = {valtime}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Input \r\n                innerRef = {props.refs}\r\n                type     = \"hidden\"\r\n                name     = {props.name}\r\n                invalid  = {props.errors[props.name] && true}\r\n                value    = {value || ''}\r\n            />\r\n            <FormFeedback>{props.errors[props.name] && errormessage}</FormFeedback>\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nfunction SelectForm(props){\r\n    let errormessage = getError(props.errors[props.name]);\r\n    return(\r\n        <FormGroup>\r\n            <Label>{props.label}</Label>\r\n            <Input \r\n                name     = {props.name}\r\n                invalid  = {props.errors[props.name] && true}\r\n                onChange = {props.onChange}\r\n                innerRef = {props.refs}\r\n                type     = \"select\"\r\n                value    = {props.value}\r\n            >\r\n                {props.data.map((option, key) =>\r\n                    <option key={key} value={option.value}>\r\n                    {option.name}\r\n                    </option>\r\n                )}\r\n            </Input>\r\n            <FormFeedback>{props.errors[props.name] && errormessage}</FormFeedback>\r\n        </FormGroup>\r\n    )\r\n}\r\nexport {InputForm, FileForm, SelectForm, DateForm};","// import React, { Component } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nfunction SwalResult(data){\r\n    if(data.api_status === 1){\r\n        return true;\r\n    }else if(data.api_status === 0){\r\n        Swal.fire({\r\n            title            : 'Error!',\r\n            text             : data.api_message,\r\n            icon             : 'error',\r\n            confirmButtonText: 'OK',\r\n        })\r\n    }else if(data.api_status === 401){\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('ListMenu');\r\n        Swal.fire({\r\n            title            : 'Auth Failed!',\r\n            text             : data.api_message,\r\n            icon             : 'error',\r\n            confirmButtonText: 'OK',\r\n            allowOutsideClick: false,\r\n            allowEscapeKey   : false,\r\n        }).then((result) =>{\r\n            window.location.reload(true);\r\n        })\r\n    }\r\n}\r\nfunction SwalLoading(){\r\n    Swal.fire({\r\n        title: 'Wait',\r\n        timerProgressBar: true,\r\n        allowOutsideClick: false,\r\n        allowEscapeKey   : false,\r\n        onBeforeOpen: () => {\r\n            Swal.showLoading()\r\n        }\r\n    })\r\n}\r\n\r\nfunction makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n }\r\nexport { SwalResult, SwalLoading, makeid };","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LEFT_PAGE = 'LEFT';\r\nconst RIGHT_PAGE = 'RIGHT';\r\n\r\n/**\r\n * Helper method for creating a range of numbers\r\n * range(1, 5) => [1, 2, 3, 4, 5]\r\n */\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n}\r\n\r\nclass Pagination extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\r\n\r\n    // pageNeighbours can be: 0, 1 or 2\r\n    this.pageNeighbours = typeof pageNeighbours === 'number'\r\n      ? Math.max(0, Math.min(pageNeighbours, 2))\r\n      : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1 };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.pageLimit!==this.props.pageLimit){\r\n      this.gotoPage(1);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = page => {\r\n    const { onPageChanged = f => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, Math.ceil(this.props.totalRecords / this.props.pageLimit)));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: Math.ceil(this.props.totalRecords / this.props.pageLimit),\r\n      pageLimit: this.props.pageLimit,\r\n      totalRecords: this.props.totalRecords\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  }\r\n\r\n  handleClick = page => evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  }\r\n\r\n  handleMoveLeft = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\r\n  }\r\n\r\n  handleMoveRight = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\r\n  }\r\n\r\n  /**\r\n   * Let's say we have 10 pages and we set pageNeighbours to 2\r\n   * Given that the current page is 6\r\n   * The pagination control will look like the following:\r\n   *\r\n   * (1) < {4 5} [6] {7 8} > (10)\r\n   *\r\n   * (x) => terminal pages: first and last page(always visible)\r\n   * [x] => represents current page\r\n   * {...x} => represents page neighbours\r\n   */\r\n  fetchPageNumbers = () => {\r\n\r\n    const totalPages = Math.ceil(this.props.totalRecords / this.props.pageLimit);\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    /**\r\n     * totalNumbers: the total page numbers to show on the control\r\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n     */\r\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n\r\n      const startPage = Math.max(2, currentPage - pageNeighbours);\r\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n\r\n      let pages = range(startPage, endPage);\r\n\r\n      /**\r\n       * hasLeftSpill: has hidden pages to the left\r\n       * hasRightSpill: has hidden pages to the right\r\n       * spillOffset: number of hidden pages either to the left or to the right\r\n       */\r\n      const hasLeftSpill = startPage > 2;\r\n      const hasRightSpill = (totalPages - endPage) > 1;\r\n      const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n      switch (true) {\r\n        // handle: (1) < {5 6} [7] {8 9} (10)\r\n        case (hasLeftSpill && !hasRightSpill): {\r\n          const extraPages = range(startPage - spillOffset, startPage - 1);\r\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) {2 3} [4] {5 6} > (10)\r\n        case (!hasLeftSpill && hasRightSpill): {\r\n          const extraPages = range(endPage + 1, endPage + spillOffset);\r\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) < {4 5} [6] {7 8} > (10)\r\n        case (hasLeftSpill && hasRightSpill):\r\n        default: {\r\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n\r\n    }\r\n\r\n    return range(1, totalPages);\r\n\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.totalRecords || Math.ceil(this.props.totalRecords / this.props.pageLimit) === 1) return null;\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"Countries Pagination\">\r\n          <ul className=\"pagination pull-right\">\r\n            { pages.map((page, index) => {\r\n\r\n              if (page === LEFT_PAGE) return (\r\n                <li key={index} className=\"page-item\">\r\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n\r\n              if (page === RIGHT_PAGE) return (\r\n                <li key={index} className=\"page-item\">\r\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n\r\n              return (\r\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\r\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\r\n                </li>\r\n              );\r\n\r\n            }) }\r\n\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;","import React, { Component } from 'react';\r\nimport { Col, Row, Table, FormGroup, Input, InputGroup, InputGroupAddon, Button} from 'reactstrap';\r\nimport Pagination from './PaginationComponent';\r\n\r\nexport default class TableList extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n        sort      : null,\r\n        sortStatus: 0,\r\n        page      : 1,\r\n        search    : '',\r\n        row       : 5,\r\n  \r\n      }; // initialise state /\r\n    }\r\n    Sorting(val){\r\n      // if(is_sorting){\r\n        if(val === this.state.sort){\r\n          var status;\r\n          if(this.state.sortStatus === 0){\r\n            status = 1\r\n          } else if(this.state.sortStatus === 1) {\r\n            status = 2\r\n          } else {\r\n            status = 0\r\n            val = null\r\n          }\r\n          this.setState({sort: val, sortStatus: status}, () =>{\r\n            this.FilterResult();\r\n          })\r\n          // this.props.handleSorting({sort: val, sortStatus: status});\r\n        }else{\r\n          this.setState({sort: val, sortStatus: 1}, () =>{\r\n            this.FilterResult();\r\n          })\r\n          // this.props.handleSorting({sort: val, sortStatus: 1});\r\n        }\r\n      // }\r\n    }\r\n    onPageChanged = data => {\r\n      const { currentPage } = data;\r\n      this.setState({page: currentPage}, () => {\r\n        this.FilterResult();\r\n      });\r\n    };\r\n    handleSearch = event => {\r\n      this.setState({search: event.target.value, page: 1}, () => {\r\n        this.FilterResult();\r\n      });\r\n    };\r\n    handleRow = event => {\r\n      this.setState({row: event.target.value, page: 1}, () => {\r\n        this.FilterResult();\r\n      });\r\n    };\r\n    encodeQueryData(data) {\r\n      const ret = [];\r\n      for (let d in data){\r\n        if(data[d])\r\n        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(data[d]));\r\n      }\r\n      return ret.join('&');\r\n    }\r\n    FilterResult(){\r\n      var value = {\r\n          page  : this.state.page,\r\n          row   : this.state.row,\r\n          search: this.state.search,\r\n          by    : this.state.sort,\r\n          sort  : this.state.sortStatus,\r\n      }\r\n      this.props.handleRespone(\r\n        {\r\n          query     : this.encodeQueryData(value)\r\n        }\r\n      );\r\n    }\r\n    HeaderField(columns){\r\n      var icon  = ['fa fa-sort fa-sm mt-2', 'fa fa-sort-asc fa-sm mt-2', 'fa fa-sort-desc fa-sm mt-2'];\r\n      var color = ['#bfbfbf', 'black', 'black' ];\r\n      var value = [];\r\n      for (let i = 0; i < columns.length; i++) {\r\n        var width = columns[i].width ? columns[i].width : null;\r\n\r\n        if(columns[i].field !== null && columns[i].sort !== false){\r\n          value.push(<th width={width} style={{cursor: 'pointer'}} onClick={() => this.Sorting(columns[i].field)} key={i}>{columns[i].title}  <i style={{color: this.state.sort === columns[i].field ? color[this.state.sortStatus] : color[0]}} className={this.state.sort === columns[i].field ? icon[this.state.sortStatus] : icon[0]}></i></th>)\r\n        }else{\r\n          value.push(<th width={width} key={i}>{columns[i].title}</th>)\r\n        }\r\n      }\r\n      return( \r\n        <thead>\r\n          <tr>\r\n            {value}\r\n          </tr>\r\n        </thead>\r\n      )\r\n    }\r\n  \r\n    ListValue(data, columns){\r\n      var list;\r\n      if(data != null){\r\n        var no = data.from;\r\n  \r\n       \r\n        list = data.data.map(function(item, i){\r\n          var items = [];\r\n  \r\n          for (let index = 0; index < columns.length; index++) {\r\n            if(columns[index].template){\r\n              items.push(<td key={index}>{columns[index].template(item, i, no++ )}</td>)\r\n            }else{\r\n              items.push(<td key={index}>{item[columns[index].field]}</td>)\r\n            }\r\n          }\r\n  \r\n          return (\r\n            <tr key={i}>\r\n              {items}\r\n            </tr>\r\n          )\r\n        })\r\n      }\r\n      return list;\r\n    }\r\n    render(){\r\n      return(\r\n        <React.Fragment>\r\n          <Row>\r\n            <Col xs=\"12\" sm=\"6\" md=\"6\">\r\n              <FormGroup row>\r\n                  <Col xs=\"12\" sm=\"6\" md=\"4\">\r\n                    <Input onChange={this.handleRow} type=\"select\" name=\"rows\" id=\"rows\">\r\n                      <option value=\"5\">5 Rows</option>\r\n                      <option value=\"10\">10 Rows</option>\r\n                      <option value=\"15\">15 Rows</option>\r\n                      <option value=\"20\">20 Rows</option>\r\n                      <option value=\"25\">25 Rows</option>\r\n                      <option value=\"30\">30 Rows</option>\r\n                    </Input>\r\n                </Col>\r\n              </FormGroup>\r\n            </Col>\r\n  \r\n            <Col xs=\"12\" sm=\"6\" md=\"6\">\r\n              <FormGroup row>\r\n                <Col md=\"12\">\r\n                  <InputGroup className=\"pull-bottom\">\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <Button type=\"button\" color=\"primary\"><i className=\"fa fa-search\"></i> Search</Button>\r\n                    </InputGroupAddon>\r\n                    <Input onChange={this.handleSearch} type=\"text\" id=\"input1-group2\" name=\"input1-group2\" placeholder=\"Type Here.....\" />\r\n                  </InputGroup>\r\n                </Col>\r\n              </FormGroup>\r\n            </Col>\r\n  \r\n          </Row>\r\n          <Table hover bordered striped responsive>\r\n              {this.HeaderField(this.props.columns)}\r\n            <tbody>\r\n              {\r\n                this.props.loading ?\r\n                <tr>\r\n                  <td colSpan={this.props.columns.length} align=\"center\">\r\n                    Loading...\r\n                  </td>\r\n                </tr>\r\n                :\r\n                this.ListValue(this.props.data, this.props.columns)\r\n              }\r\n            </tbody>\r\n          </Table>\r\n         \r\n          {\r\n          this.props.data != null ?\r\n            <Row>\r\n              <Col xs=\"12\" sm=\"6\" md=\"6\">\r\n                <dt>Showing {this.props.data.from} to {this.props.data.to} of {this.props.data.total} entries</dt>\r\n              </Col>\r\n              <Col xs=\"12\" sm=\"6\" md=\"6\">\r\n                <Pagination totalRecords={this.props.data.total} pageLimit={parseInt(this.props.data.per_page)} pageNeighbours={1} onPageChanged={this.onPageChanged} />\r\n              </Col>\r\n            </Row>\r\n            :\r\n            null\r\n          }\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }","import React, { Component, useState  } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport TableList from '../../Component/TableComponent';\r\nimport { InputForm } from '../../Component/FormComponent';\r\nimport { SwalResult, SwalLoading } from '../../Component/Helper';\r\nimport { useForm } from 'react-hook-form';\r\nimport { API, params, header } from '../../Api';\r\nimport { MetroSpinner } from \"react-spinners-kit\";\r\n\r\nfunction Add(props){\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const [loading, setLoading] = useState(false)\r\n  const onSubmit = data => {\r\n    Swal.fire({\r\n      title            : 'Apakah anda yakin ? ',\r\n      icon             : 'info',\r\n      text             : 'Menambah data ini ?',\r\n      showCancelButton : true,\r\n      focusConfirm     : false,\r\n      confirmButtonText: 'Ya',\r\n      cancelButtonText : 'Cancel',\r\n    }).then((result)=>{\r\n      if(result.value){\r\n        setLoading(true);\r\n        axios.post(API().postMasterCabang, params(data), header(localStorage.getItem('token')))\r\n        .then((response) => {\r\n            let res = response.data;\r\n            let result = SwalResult(res);\r\n\r\n            if(result){\r\n              Swal.fire({\r\n                title            : 'Sukses!',\r\n                text             : res.api_message,\r\n                icon             : 'success',\r\n                confirmButtonText: 'OK',\r\n              });\r\n              setLoading(false);\r\n              reset();\r\n              props.refreshData(true);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n          Swal.fire({\r\n            title: 'Error!',\r\n            text: error.toString(),\r\n            icon: 'error',\r\n            confirmButtonText: 'OK'\r\n          });\r\n          setLoading(false);\r\n        });\r\n      }\r\n    })\r\n  };\r\n  return (\r\n      <Row>\r\n          <Col xs=\"12\" sm=\"12\" md=\"12\">\r\n              <Card>\r\n                  <CardHeader>\r\n                      <strong>Tambah Data</strong>\r\n                      <div className=\"card-header-actions\">\r\n                        <Button onClick={()=> props.onClick()} block outline color=\"primary\">\r\n                          <i className=\"fa fa-remove\"></i> \r\n                          {' '}<span>Hide</span>\r\n                        </Button>\r\n                      </div>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                      <InputForm \r\n                        refs={register({\r\n                            required : true,\r\n                            maxLength: {value: 100, message: \"100\"},\r\n                          })}\r\n                        name   = \"nama_cabang\"\r\n                        label  = \"Nama Cabang\"\r\n                        type   = \"text\"\r\n                        errors = {errors}\r\n                      />\r\n                      <InputForm \r\n                        refs={register({\r\n                            required : true,\r\n                            maxLength: {value: 50, message: \"50\"},\r\n                          })}\r\n                        name   = \"alias_cabang\"\r\n                        label  = \"Alias Cabang\"\r\n                        errors = {errors}\r\n                        type   = \"text\"\r\n                      />\r\n                      <Button type=\"submit\" size=\"sm\" color=\"primary\" disabled={loading}> {loading ? <MetroSpinner size={16} color=\"#fff\" /> : <span><i className=\"fa fa-dot-circle-o\"></i> Submit</span> }</Button>\r\n                    </Form>\r\n                  </CardBody>\r\n              </Card>\r\n          </Col>\r\n      </Row>\r\n  )\r\n}\r\n\r\nfunction Update(props){\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    defaultValues: {\r\n      nama_cabang: props.data.nama_cabang,\r\n      alias_cabang  : props.data.alias_cabang\r\n    }\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = data => {\r\n    Swal.fire({\r\n      title            : 'Apakah anda yakin ? ',\r\n      icon             : 'info',\r\n      text             : 'Merubah data ini ?',\r\n      showCancelButton : true,\r\n      focusConfirm     : false,\r\n      confirmButtonText: 'Ya',\r\n      cancelButtonText : 'Cancel',\r\n    }).then((result)=>{\r\n      if(result.value){\r\n        setLoading(true);\r\n        axios.post(API().updateMasterCabang, params(data), header(localStorage.getItem('token')))\r\n        .then((response) => { \r\n            let res = response.data;\r\n            let result = SwalResult(res);\r\n\r\n            if(result){\r\n              Swal.fire({\r\n                title            : 'Sukses!',\r\n                text             : res.api_message,\r\n                icon             : 'success',\r\n                confirmButtonText: 'OK',\r\n              });\r\n              setLoading(false);\r\n              reset();\r\n              props.onClick();\r\n              props.refreshData(true);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n          Swal.fire({\r\n            title: 'Error!',\r\n            text: error.toString(),\r\n            icon: 'error',\r\n            confirmButtonText: 'OK'\r\n          });\r\n          setLoading(false);\r\n        });\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n      <Row>\r\n          <Col xs=\"12\" sm=\"12\" md=\"12\">\r\n              <Card>\r\n                  <CardHeader>\r\n                      <strong>Ubah Data</strong>\r\n                      <div className=\"card-header-actions\">\r\n                        <Button onClick={()=> props.onClick()} block outline color=\"primary\">\r\n                          <i className=\"fa fa-remove\"></i> \r\n                          {' '}<span>Hide</span>\r\n                        </Button>\r\n                      </div>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                      <input ref={register()} type=\"hidden\" name=\"id\" value={props.data.id_cabang}/>\r\n                      <InputForm \r\n                        refs={register({\r\n                            required : true,\r\n                            maxLength: {value: 100, message: \"100\"},\r\n                          })}\r\n                        name   = \"nama_cabang\"\r\n                        label  = \"Nama Cabang\"\r\n                        type   = \"text\"\r\n                        errors = {errors}\r\n                      />\r\n                      <InputForm \r\n                        refs={register({\r\n                            required : true,\r\n                            maxLength: {value: 50, message: \"50\"},\r\n                          })}\r\n                        name   = \"alias_cabang\"\r\n                        label  = \"Alias Cabang\"\r\n                        errors = {errors}\r\n                        type   = \"text\"\r\n                      />\r\n                      <Button type=\"submit\" size=\"sm\" color=\"primary\" disabled={loading}> {loading ? <MetroSpinner size={16} color=\"#fff\" /> : <span><i className=\"fa fa-dot-circle-o\"></i> Ubah</span> }</Button>\r\n                    </Form>\r\n                  </CardBody>\r\n              </Card>\r\n          </Col>\r\n      </Row>\r\n  )\r\n}\r\n\r\nexport default class Default extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n     data       : null,\r\n     loading    : true,\r\n     query      : \"page=1&row=5\",\r\n     pageLoading: false,\r\n     pageAdd    : false,\r\n     pageUpdate : false,\r\n     dataUpdate : null,\r\n    };\r\n    \r\n  }\r\n\r\n  columns = [\r\n    {\r\n      title   : '',\r\n      field   : null,\r\n      width   : 90,\r\n      template: (row) => {\r\n        return (<React.Fragment>\r\n                  <Button onClick={() => this.doDelete(row.id_cabang)} title=\"Hapus\" className=\"btn-danger btn-brand icon btn-sm\">\r\n                    <i className=\"cui-trash\"></i>\r\n                  </Button> {'   '}\r\n                  <Button onClick={() => this.doUpdate(row.id_cabang)} title=\"Ubah\" className=\"btn-stack-overflow btn-brand icon btn-sm\">\r\n                    <i className=\"cui-pencil\"></i>\r\n                  </Button>\r\n                </React.Fragment>\r\n          )\r\n      }\r\n    },\r\n    {\r\n      title: 'Nama Cabang',\r\n      field: 'nama_cabang',\r\n    }, \r\n    {\r\n     title: 'Alias Cabang',\r\n     field: 'alias_cabang',\r\n     width   : 250,\r\n    }\r\n  ];\r\n\r\n  componentDidMount(){\r\n    this.getData();\r\n  }\r\n\r\n  getData(){\r\n    this.setState({loading: true});\r\n    axios.get(API().getMasterCabang + \"?\" + this.state.query, header(localStorage.getItem('token')))\r\n    .then((response) => {\r\n        let res = response.data;\r\n        let result = SwalResult(res);\r\n        if(result)\r\n        this.setState({data: res.data, loading: false});\r\n    }).catch((error) => {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text: error.toString(),\r\n        icon: 'error',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    });\r\n  }\r\n\r\n  handleRespone = data => {\r\n    const { query } = data;\r\n    this.setState({query: query}, () => {\r\n      this.getData();\r\n    });\r\n  }\r\n\r\n  doDelete(id){\r\n    Swal.fire({\r\n      title            : 'Apakah anda yakin ? ',\r\n      icon             : 'info',\r\n      text             : 'Menghapus data ini ?',\r\n      showCancelButton : true,\r\n      focusConfirm     : false,\r\n      confirmButtonText: 'Ya',\r\n      cancelButtonText : 'Cancel',\r\n    }).then((result)=>{\r\n      if(result.value){\r\n        SwalLoading();\r\n        axios.post(API().deleteMasterCabang, params({id: id}), header(localStorage.getItem('token')))\r\n        .then((response) => {\r\n            let res = response.data;\r\n            let result = SwalResult(res);\r\n            if(result){\r\n              Swal.fire({\r\n                title            : 'Sukses!',\r\n                text             : res.api_message,\r\n                icon             : 'success',\r\n                confirmButtonText: 'OK',\r\n              });\r\n              this.getData();\r\n            }\r\n        })\r\n        .catch((error) => {\r\n          Swal.fire({\r\n            title            : 'Error!',\r\n            text             : error.toString(),\r\n            icon             : 'error',\r\n            confirmButtonText: 'OK'\r\n          });\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  doUpdate(id){\r\n    window.scrollTo(0,0);\r\n    this.setState({dataUpdate: null, pageUpdate: false, pageLoading: true, pageAdd: false});\r\n    axios.get(API().getMasterCabangBy + \"?id=\"+id, header(localStorage.getItem('token')))\r\n    .then((response) => {\r\n        let res = response.data;\r\n        let result = SwalResult(res);\r\n        if(result)\r\n        this.setState({dataUpdate: res.data, pageUpdate: true, pageLoading: false});\r\n    }).catch((error) => {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text: error.toString(),\r\n        icon: 'error',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Row style={{display: 'flex', justifyContent: 'center', marginBottom: '10px'}}>\r\n        {this.state.pageLoading ?\r\n          <MetroSpinner size={34} color=\"#fff\" />\r\n          :\r\n          null\r\n        }\r\n        </Row>\r\n        {this.state.pageAdd ? \r\n        <Add\r\n            onClick = {()=>this.setState({pageAdd: false})}\r\n            refreshData = {(value) => this.getData()}\r\n        />\r\n        :\r\n        null\r\n        }\r\n        {this.state.pageUpdate ? \r\n        <Update\r\n            onClick     = {()=>this.setState({pageUpdate: false})}\r\n            refreshData = {(value) => this.getData()}\r\n            data        = {this.state.dataUpdate}\r\n        />\r\n        :\r\n        null\r\n        }\r\n        <div className=\"animated fadeIn\">\r\n          <Row>\r\n            <Col xs=\"12\" sm=\"12\" md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <strong>Cabang</strong>\r\n                  <div className=\"card-header-actions\">\r\n                    {!this.state.pageAdd ?\r\n                      <Button onClick={()=> this.setState({pageAdd: true, pageUpdate: false})} block outline color=\"primary\">\r\n                        <i className=\"fa fa-plus-circle\"></i> \r\n                        {' '}<span>Tambah</span>\r\n                      </Button>\r\n                      :\r\n                      null\r\n                    }\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <TableList\r\n                      data          = {this.state.data}\r\n                      columns       = {this.columns}\r\n                      loading       = {this.state.loading}\r\n                      handleRespone = {this.handleRespone}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}